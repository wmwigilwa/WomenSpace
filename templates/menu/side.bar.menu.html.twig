{% extends 'knp_menu.html.twig' %}


{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}
        {% import _self as knp_menu %}
        <li{{ knp_menu.attributes(attributes) }}>
            {%- if attributes is not empty and 'hs-accordion current_ancestor' in attributes['class'] %}
                {% set expand_menu_display = 'block' %}
             {% else %}
                 {% set expand_menu_display = 'hidden' %}
            {% endif %}

            {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
            {% if item.attributes|length > 0 %}
                <div id="{{ item.attributes['id']~'-child' }}" class="hs-accordion-content w-full overflow-hidden transition-[height] duration-300  {{ expand_menu_display }}">
                    {{ block('list') }}
                </div>
            {% else %}
                {{ block('list') }}
            {% endif %}
        </li>
    {% endif %}
{% endblock %}


{% block linkElement %}
    {% import _self as knp_menu %}
        <a class="hs-accordion-toggle
        flex items-center
        gap-x-3.5
        hs-accordion-active:text-white
        hs-accordion-active:hover:text-white
        text-sm
        hover:text-white
        {% if item.extra('icon') is not null %}
            bg-stone-950 py-4 px-6 font-medium text-slate-500 hover:bg-purple-600
        {% else %}
            bg-stone-900 py-2 px-8 text-gray-200 hover:bg-stone-800
        {% endif %}"
        href="{{ item.uri }}"{{ knp_menu.attributes(item.linkAttributes) }}>
            {% block label %}
                {% if item.extra('icon') is not null %}
                    <span><i class="fa fa-{{ item.extra('icon') }}"></i></span>
                {% endif %}
                {{ parent() }}
            {% endblock %}

            {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
                <svg class="hs-accordion-active:block ml-auto hidden w-3 h-3 text-gray-600 group-hover:text-gray-500 dark:text-gray-400" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 11L8.16086 5.31305C8.35239 5.13625 8.64761 5.13625 8.83914 5.31305L15 11" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path>
                </svg>

                <svg class="hs-accordion-active:hidden ml-auto block w-3 h-3 text-gray-600 group-hover:text-gray-500 dark:text-gray-400" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 5L8.16086 10.6869C8.35239 10.8637 8.64761 10.8637 8.83914 10.6869L15 5" stroke="currentColor" stroke-width="2" stroke-linecap="round"></path>
                </svg>
            {% endif %}
        </a>
{% endblock %}







